import numpy as np
from numpy import sqrt
from src.math_tools import db2lin

DRONE_DEFAULT_TRANSMISSION_POWER = 0.01 #W
DEFAULT_CARRIER_FREQ = 500e6 #Hz
DEFAULT_SENSING_PERFORMANCE_LAMBDA = 10e-3 #/s
NOISE_POWER_N0 = db2lin(-85) #dBm
DEFAULT_SNR_THRESHOLD = db2lin(10) #linear




TF_FRAME_DRUATION = 0.1
TB_BEACON_LENGTH = 3
TS_SENSING_LENGTH = 3
TU_TRANSMISSION_LENGTH = 2
TC_CYCLE_LENGTH = TB_BEACON_LENGTH + TS_SENSING_LENGTH + TU_TRANSMISSION_LENGTH
DEFAULT_N_SC = 1 #Number of subchannels



AREA_DIMS = [300, 300] #m
SPATIAL_POINT_STEP = 100 #m
MAXIMUM_DISTANCE_PER_CYCLE = SPATIAL_POINT_STEP * sqrt(3)
MAXIMUM_DRONE_HEIGHT = 100 #m
MINIMUM_DRONE_HEIGHT = 100 #m
HEIGHT_LEVELS_PER_CYCLE = 3

DISCOUNT_RATIO = 0.9

# INIT_TASK_LOCATIONS = [(500, 0), (-250*np.sqrt(2), 250*np.sqrt(2)), (-250*np.sqrt(2), -250*np.sqrt(2))]
# INIT_TASK_LOCATIONS = [(300, 0), (-300, 0), (-250, 250)]
INIT_TASK_LOCATIONS = [(300, 300), (-300, 300)]
# INIT_TASK_LOCATIONS = [(500, 0), (0, 500)]
DEFAULT_N_UAVS = len(INIT_TASK_LOCATIONS)


# Channel model PLOS
PLOS_AVG_LOS_LOSS = 1
PLOS_AVG_NLOS_LOSS = 20
PLOS_A_PARAM = 9.61
PLOS_B_PARAM = 0.16